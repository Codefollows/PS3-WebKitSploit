


006161B8 81610074 lwz        r11,0x74(r1)
006161BC 81410078 lwz        r10,0x78(r1)                   PIPE
006161C0 8101007C lwz        r8,0x7C(r1)
006161C4 80E10080 lwz        r7,0x80(r1)                    PIPE
006161C8 80C10084 lwz        r6,0x84(r1)
006161CC 80A10088 lwz        r5,0x88(r1)                    PIPE
006161D0 8081008C lwz        r4,0x8C(r1)
006161D4 80610090 lwz        r3,0x90(r1)                    PIPE
006161D8 81210094 lwz        r9,0x94(r1)
006161DC 80010070 lwz        r0,0x70(r1)                    PIPE
006161E0 913F0024 stw        r9,0x24(r31)
006161E4 901F0000 stw        r0,0x0(r31)                    PIPE
006161E8 917F0004 stw        r11,0x4(r31)
006161EC 915F0008 stw        r10,0x8(r31)                   PIPE
006161F0 911F000C stw        r8,0xC(r31)
006161F4 90FF0010 stw        r7,0x10(r31)                   PIPE
006161F8 90DF0014 stw        r6,0x14(r31)
006161FC 90BF0018 stw        r5,0x18(r31)                   PIPE
00616200 909F001C stw        r4,0x1C(r31)
00616204 907F0020 stw        r3,0x20(r31)                   PIPE
00616208 E80100D0 ld         r0,0xD0(r1)
0061620C 7FA307B4 extsw      r3,r29
00616210 EBC100B0 ld         r30,0xB0(r1)
00616214 EBA100A8 ld         r29,0xA8(r1)                   PIPE
00616218 7C0803A6 mtspr      lr,r0
0061621C EBE100B8 ld         r31,0xB8(r1)
00616220 382100C0 addi       r1,r1,0xC0
00616224 4E800020 blr 




000138B0 7D034378 mr         r3,r8
000138B4 99480003 stb        r10,0x3(r8)                    PIPE
000138B8 98080000 stb        r0,0x0(r8)
000138BC 99280001 stb        r9,0x1(r8)                     PIPE
000138C0 99680002 stb        r11,0x2(r8)
000138C4 4E800020 blr


























lwz/ld        r0, 0x0(rX) 
mtspr      ctr/lr, r0
lwz/ld      r4,0xSS(rT)
lwz/ld         r5,0xRR(rS)
addi        rX, rY, 0xPP
bctrl/blr
where the registers (rS, rT|, rX, rY) are either r1, r12, r14 to r31
and where rX in first instruction (ld/lwz r0) must be same the same as rX in addi rX instruction



*************************************************
** FINALIZED TEMPLATE **

rX = r1

-------------------------------------
lwz/ld        r0, 0x0(r1) 

ld.........r0\,0x00\(r1\)
ld.........r0\,0x\d\(r1\)
ld.........r0\,0x\d\d\(r1\)
ld.........r0\,0x\d\d\d\(r1\)
ld.........r0\,0x\d\d\d\d\(r1\)

lwz........r0\,0x00\(r1\)
lwz........r0\,0x\d\(r1\)
lwz........r0\,0x\d\d\(r1\)
lwz........r0\,0x\d\d\d\(r1\)
lwz........r0\,0x\d\d\d\d\(r1\)
-------------------------------------

mtspr      ctr/lr, r0

mtspr......ctr\,r0
mtspr......lr\,r0


lwz/ld      r4,0xSS(rT)

ld.........r4\,0x\d\d\(r\d\)

lwz........r4\,0x\d\d\(r\d\)


lwz/ld         r5,0xRR(rS)

ld.........r5\,0x\d\d\(r\d\)

lwz........r5\,0x\d\d\(r\d\)

or.........r4\,r2\d\,r2\d
or.........r4\,r3\d\,r3\d
or.........r5\,r2\d\,r2\d
or.........r5\,r3\d\,r3\d

-------------------------------------
addi        r1, rY, 0xPP

addi.......r1\,r\d\,0x\d
addi.......r1\,r\d\,0x\d\d
addi.......r1\,r\d\,0x\d\d\d
addi.......r1\,r\d\,0x\d\d\d\d

-------------------------------------

mr.........r1\,r2\d
mr.........r1\,r3\d
clrldi.....r1\,r2\d\,32
clrldi.....r1\,r3\d\,32

-------------------------------------

*************************************************







*** REGEX TEMPLATE BEGIN **

ld.........r0\,0x00\(r\d\)
ld.........r0\,0x\d\d\(r\d\)
ld.........r0\,0x\d\d\(r1\)
ld.........r0\,0x\d\d\(r12\)
ld.........r0\,0x\d\d\(r14\)
ld.........r0\,0x\d\d\(r15\)
ld.........r0\,0x\d\d\(r16\)
ld.........r0\,0x\d\d\(r17\)
ld.........r0\,0x\d\d\(r18\)
ld.........r0\,0x\d\d\(r19\)
ld.........r0\,0x\d\d\(r20\)
ld.........r0\,0x\d\d\(r21\)
ld.........r0\,0x\d\d\(r22\)
ld.........r0\,0x\d\d\(r23\)
ld.........r0\,0x\d\d\(r24\)
ld.........r0\,0x\d\d\(r25\)
ld.........r0\,0x\d\d\(r26\)
ld.........r0\,0x\d\d\(r27\)
ld.........r0\,0x\d\d\(r28\)
ld.........r0\,0x\d\d\(r29\)
ld.........r0\,0x\d\d\(r30\)
ld.........r0\,0x\d\d\(r31\)

mtspr      ctr/lr, r0

mtspr......ctr\,r0
mtspr......lr\,r0

ld.........r4\,0x\d\d\(r\d\)

ld.........r5\,0x\d\d\(r\d\)

addi.......r\d\,r\d\,0x\d
addi.......r\d\,r\d\,0x\d\d
addi.......r\d\,r\d\,0x\d\d\d
addi.......r\d\,r\d\,0x\d\d\d\d

addi.......r1\,r\d\,0x\d\d
addi.......r1\,r\d\d\,0x\d\d
addi.......r12\,r\d\,0x\d\d
addi.......r14\,r\d\,0x\d\d
addi.......r1\d\,r\d\,0x\d\d
addi.......r2\d\,r\d\,0x\d\d
addi.......r3\d\,r\d\,0x\d\d

mr.........r1\,r2\d
mr.........r1\,r3\d
clrldi.....r1\,r2\d\,32
clrldi.....r1\,r3\d\,32
*** REGEX TEMPLATE END **



** BAD BRANCH AREAS START **

0x000AFXXX

** BAD BRANCH AREAS END **




** TESTING **




------------------------------------------------------------------------------------------------------------------------------
** NO GOOD **
0009AB30 801E0000 lwz        r0,0x0(r30)
0009AB34 7BAB0020 clrldi     r11,r29,32
0009AB38 79290020 clrldi     r9,r9,32
0009AB3C 7C0903A6 mtspr      ctr,r0                        01 (0009AB30) REG
0009AB40 7F03C378 mr         r3,r24
0009AB44 80AB0000 lwz        r5,0x0(r11)
0009AB48 80890008 lwz        r4,0x8(r9)
0009AB4C F8410028 std        r2,0x28(r1)                    PIPE
0009AB50 805E0004 lwz        r2,0x4(r30)
0009AB54 4E800421 bctrl 
** ^^ NO GOOD ^^ **

Same thing
If you have a addi r30 or ld/lwz r30 after the lwz r0, 0(r30) instruction then a rerun would load a different value into r0. 

ok so if another register would set r30 then rerun would change r0?
from a mr r30, rX or something


Yes. That's why you need something like
addi r30, rY, n
or
ld/lwz r30,...
or a mr r30, rX

In a mr r30, rX rX will need to be r12 or r14 to r31.
Same for rY in addi or for the indexed register in ld/lwz





** NO GOOD **
000A8918 81610070 lwz        r11,0x70(r1)
000A891C 38800000 li         r4,0x0
000A8920 81210080 lwz        r9,0x80(r1)
000A8924 38A00001 li         r5,0x1
000A8928 80610074 lwz        r3,0x74(r1)
000A892C 39290001 addi       r9,r9,0x1                     01 (000A8920) REG
000A8930 91210080 stw        r9,0x80(r1)                   03 (000A892C) REG LSU
000A8934 800B0000 lwz        r0,0x0(r11)                    PIPE
000A8938 F8410028 std        r2,0x28(r1)
000A893C 7C0903A6 mtspr      ctr,r0                        01 (000A8934) REG
000A8940 804B0004 lwz        r2,0x4(r11)
000A8944 4E800421 bctrl
** ^^ NO GOOD ^^ **


If it had an addi r1, r1, xx or addi r1, r2X, xx or a ld r1, 0(r2X) or whatever it would work
Or even a mr r1, r2X
Anything that can update the indexed register we load r0 from
With a valid value we control of course
Even a clrldi r1, r2X, 32 would work

mr.........r1\,r2\d
mr.........r1\,r3\d
clrldi.....r1\,r2\d\,32
clrldi.....r1\,r3\d\,32



In fact a clrldi could load our r4 & r5 just as well as a ld/lwz or even addi
Ideally I would prefer to rely on r1 as stack frame pointer with stuff like that 

ld/lwz r0, 0xYY(r1/r12/r14 to r31)
ld/lwz r4, 0xXX(r1/r12/r14 to r31)
ld/lwz r5, 0xZZ(r1/r12/r14 to r31)
ld/lwz r1, 0xTT(r1/r12/r14 to r31) or addi r1, r1/r12/r14 to r31, n
mtspr lr/ctr r0
blr/bctr(l)

Keeping in mind that we could use add/addi & clrldi to replace any ld/lwz





mr r3, rX or ld/lwz r3, 0xXX(rX) or clrldi r3, r3, 32

ld r0, 0xYY(rY)

mtspr lr/ctr r0
blr/bctr(l) 

------------------------------------------------------------------------------------------------------------------------------

